/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package td1_pf;

import org.junit.Test;
import td1_pf.arbres.*;

import static org.junit.Assert.*;


import java.util.ArrayList;
import java.util.List;
import java.util.Set;
    public class AppTest {

        @Test public void testEntier(){
            Arbre<Entier> v1 = new Feuille<>(new Entier(1));
            Arbre<Entier> v2 = new Feuille<>(new Entier(2));
            Arbre<Entier> n1 = new Noeud<>(List.of(v1,v2));
            Arbre<Entier> v3 = new Feuille<>(new Entier(3));
            Arbre<Entier> root = new Noeud<>(List.of(n1,v3));

            assertEquals(3, root.taille());
        }
        @Test public void testChaine(){
            Arbre<Chaine> v1 = new Feuille<>(new Chaine("a"));
            Arbre<Chaine> v2 = new Feuille<>(new Chaine("b"));
            Arbre<Chaine> n1 = new Noeud<>(List.of(v1,v2));
            Arbre<Chaine> v3 = new Feuille<>(new Chaine("c"));
            Arbre<Chaine> root = new Noeud<>(List.of(n1,v3));

            assertEquals(3, root.taille());
        }
        @Test public void testContientEntier(){
            Entier v1 = new Entier(1);
            Entier v2 = new Entier(2);
            Arbre<Entier> f1 = new Feuille<>(v1);
            Arbre<Entier> f2 = new Feuille<>(v2);
            //f1.contient(v2);
            assertEquals(true,f1.contient(v1) );
        }
        @Test public void testEntierValeurs(){
            Entier v1 = new Entier(1);
            Entier v2 = new Entier(2);
            Arbre<Entier> f1 = new Feuille<>(v1);
            Arbre<Entier> f2 = new Feuille<>(v2);
            Arbre<Entier> n1 = new Noeud(List.of(f1,f2));
            Set<Entier> n2 = Set.of(v1, v2);
            assertEquals(n2,n1.valeurs());
            //System.out.println(n1.valeurs());
        }
        @Test public void testEntierSommer(){
            Entier v1 = new Entier(1);
            Entier v2 = new Entier(2);
            Entier v3 = new Entier(3);
            Arbre<Entier> f1 = new Feuille<>(v1);
            Arbre<Entier> f2 = new Feuille<>(v2);
            Arbre<Entier> f3 = new Feuille<>(v3);
            Arbre<Entier> n1 = new Noeud(List.of(f1,f2,f3));
            assertEquals(6,n1.somme().getEntier());
        }
        @Test public void testChaineSommer(){
            Chaine v1 = new Chaine("a");
            Chaine v2 = new Chaine("b");
            Chaine v3 = new Chaine("c");
            Arbre<Chaine> f1 = new Feuille<>(v1);
            Arbre<Chaine> f2 = new Feuille<>(v2);
            Arbre<Chaine> f3 = new Feuille<>(v3);
            Arbre<Chaine> n1 = new Noeud(List.of(f1,f2,f3));
            assertEquals("abc",n1.somme().getChaine());
        }
    }

